<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1280" height="670" titletext="Form_Work">
    <Layouts>
      <Layout width="1280" height="670" screenid="Desktop_screen">
        <Grid id="grdList01" taborder="0" left="62.00" top="85" width="1009" height="285" binddataset="dsExportExcelList">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="200"/>
                <Column size="714"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="ID"/>
                <Cell col="1" text="NAME"/>
                <Cell col="2" text="Column0"/>
              </Band>
              <Band id="body">
                <Cell text="bind:ID"/>
                <Cell col="1" text="bind:NAME"/>
                <Cell col="2" text="bind:Column0"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="Button00" taborder="1" text="Button port 8080 XExportImport.do" left="64.00" top="44" width="226" height="36" onclick="Button00_onclick"/>
        <TextArea id="txtLog" taborder="2" left="64.00" top="430" width="1007" height="218"/>
        <Button id="Button01" taborder="3" text="testfile" left="311" top="45" width="155" height="36" onclick="Button01_onclick" visible="false"/>
        <Button id="Button02" taborder="4" text="filetransuupdown" left="489" top="47" width="199" height="33" onclick="Button02_onclick" visible="false"/>
        <Button id="Button04" taborder="5" text="넥사 헨들러!!" left="64" top="7" width="627" height="30" onclick="Button04_onclick"/>
        <Button id="Button03" taborder="6" text="모달리스팝업" left="702" top="50" width="130" height="32" onclick="Button03_onclick"/>
        <Button id="Button05" taborder="7" text="Nexacro Exception" left="860" top="50" width="165" height="35" onclick="Button05_onclick"/>
        <Button id="Btn_Export_Page" taborder="8" text="ExcelExport_curve" left="1041" top="40" width="179" height="40" onclick="Btn_Export_Page_onclick"/>
        <Button id="treegrid" taborder="9" text="Button06" left="1100" top="105" width="156" height="45" onclick="treegrid_onclick"/>
        <Button id="menusearch" taborder="10" text="menusearch" left="1095" top="175" width="161" height="46" onclick="menusearch_onclick"/>
        <Button id="menusearch_expansion" taborder="11" text="menusearch_expansion" left="1096" top="236" width="165" height="44" onclick="menusearch_expansion_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsExportExcelList">
        <ColumnInfo>
          <Column id="ID" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="Column0" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="ID">export-path</Col>
            <Col id="NAME">ext://../export</Col>
            <Col id="Column0">프로젝트 홈 위치에서 한단계 위의 export 위치에 파일이 생성이 됨. 이후 다운로드는 실행 안됨</Col>
          </Row>
          <Row>
            <Col id="ID">export-path</Col>
            <Col id="NAME">ext://./export</Col>
            <Col id="Column0">프로젝트 홈 위치 아래 export 에 임시파일 생성이 됨. 이후 다운로드는 실행 안됨.</Col>
          </Row>
          <Row>
            <Col id="ID">export-path</Col>
            <Col id="NAME">ext:///export</Col>
            <Col id="Column0">최상위 드라이브 아래 export에 임시파일 생성이 됨. 이후 다운로드는 실행 안됨.</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsRequestParam">
        <ColumnInfo>
          <Column id="id" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="email" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="id">id</Col>
            <Col id="name">kims702</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsInLogin">
        <ColumnInfo>
          <Column id="id" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="email" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
// statidc
// http://localhost:8181/nexacro-xeni-java/XExportImport
this.exportUrl = "/XExportImport.do";

//this.exportUrl = "http://localhost:8181/XExportImport";

this.gfnCreateExportObject = function(pFileName){

	//excel export object id
    var sExportId = "objExcelExport";

    //ExcelExportObject : invisible object
    var objExport = this.objects[sExportId];

    //already created ExcelExportObject
    if(!this.gfnIsNull(objExport))
    {
        return objExport;
    }

    objExport = new ExcelExportObject();

    //ExcelExportObject set property
    objExport.set_exporttype(nexacro.ExportTypes.EXCEL2007);
    objExport.set_exporturl(this.exportUrl);  
    objExport.set_exportfilename(pFileName);

    //add event - onsuccess, onerror
    objExport.addEventHandler("onprogress", this.Export_onprogress, this);
    objExport.addEventHandler("onsuccess", this.Export_onsuccess, this); 
    objExport.addEventHandler("onerror", this.Export_onerror, this);

    return objExport;
}

this.gfnBasicExport = function(pFileName)
{
    var sFileName = "ExportData_BasicExport";
    if(!this.gfnIsNull(pFileName))
    {
        sFileName = pFileName;
    }

    //ExcelExportObject
    var objExport = this.gfnCreateExportObject(sFileName);

    //export Grid = export item source
    var objGrid1 = this.grdList01;
    //var objGrid2 = this.grdList02;

    //export item ranges : sheet1 - grid1, grid2
    var sExportCommand1 = "Sheet1!A1";
    //var sExportCommand2 = "Sheet1!A12";

    //addExportItem
    objExport.addExportItem(nexacro.ExportItemTypes.GRID, objGrid1, sExportCommand1);
    //objExport.addExportItem(nexacro.ExportItemTypes.GRID, objGrid2, sExportCommand2);
    objExport.exportData();
};

this.Export_onsuccess = function (obj:ExcelExportObject, e:nexacro.ExcelExportEventInfo)
{
    this.txtLog.set_value(this.txtLog.value + e.eventid +  "  Export_onsuccess\n");
};

/**
* @description ExcelExportObject onerror event
*/
this.Export_onerror = function (obj:ExcelExportObject, e:nexacro.ExcelExportErrorEventInfo)
{
    this.txtLog.set_value(this.txtLog.value + e.eventid +  "  Export_onerror\n");
};

this.Export_onprogress = function(obj:nexacro.ExcelExportObject,e:nexacro.ExcelExportProgressEventInfo)
{
    this.txtLog.set_value(this.txtLog.value
                          + e.eventid +  "  Export_onprogress : " 
                          + "recordindex " + e.recordindex + "\n");
};



/**************************************************************************
*  공통 함수 처리 영역
해당 함수의 경우 프로젝트 사용 시 프로젝트 공통함수로 전환을 권장 드립니다.
**************************************************************************/
/**
* Function Name : gfnIsNull
* Description   : 입력값이 null에 해당하는 경우 모두를 한번에 체크한다.
* Arguments     : sValue - 체크할 문자열( 예 : null 또는 undefined 또는 "" 또는 "abc" )
* Return        : Boolean sValue이 undefined, null, NaN, "", Array.length = 0인 경우 true
*/
this.gfnIsNull = function (sValue)
{
    if (new String(sValue).valueOf() == "undefined") 
    {
        return true;
    }

    if (sValue == null) 
    {
        return true;
    }

    var v_ChkStr = new String(sValue);

    if (v_ChkStr == null) 
    {
        return true;
    }

    if (v_ChkStr.toString().length == 0) 
    {
        return true;
    }

    return false;
};




this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	console.log("excel object 추가 -----------------------------------");
	
	this.gfnBasicExport(); 
};
 

this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.go("FrameBase::examFileUpTransfer.xfdl");
};

this.Button02_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.go("FrameBase::filetransupdown.xfdl");
};

this.Button04_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	console.log("---------");
};

this.Button05_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
  var sId    = "baseId";
  var sUrl   = "http://localhost:9191/sessionChk.do";
  var sInDs  = "dsInLogin=dsInLogin";
  var sOutDs = "dsInLogin=dsInLogin";
  var sArg   = "";
  var sfunc  = "fn_callback";
  
  this.transaction(sId,sUrl,sInDs,sOutDs,sArg,sfunc);
};
 

this.fn_callback = function(sId,nErrorCode,sErrorMSG)
{
  if(nErrorCode == 0)
  {
    //완료 확인
	console.log("members.do--------------------------");
    //trace(sId);
  }
}

this.Button06_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var sId    = "sessionChk";
  var sUrl   = "http://localhost:9191/sessionCheck.do";
  var sInDs  = "dsInLogin=dsInLogin";
  var sOutDs = "dsInLogin=dsInLogin";
  var sArg   = "";
  var sfunc  = "fn_callback_session_chk";
  
  this.transaction(sId,sUrl,sInDs,sOutDs,sArg,sfunc);
};

this.fn_callback_session_chk = function(sId,nErrorCode,sErrorMSG){
	console.log("sId : " + sId);
	console.log("nErrorCode : " + nErrorCode);
	console.log("sErrorMSG : " + sErrorMSG);
}




this.Button07_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	///sessionChk.do
	var sId    = "sessionChk";
  var sUrl   = "http://localhost:9191/sessionChk.do";
  var sInDs  = "dsInLogin=dsInLogin";
  var sOutDs = "dsInLogin=dsInLogin";
  var sArg   = "";
  var sfunc  = "fn_callback_session_chk";
  
  this.transaction(sId,sUrl,sInDs,sOutDs,sArg,sfunc);
};

this.Button08_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var sId    = "doLogin";
  var sUrl   = "http://localhost:9191/doLogin.do";
  var sInDs  = "dsInLogin=dsInLogin";
  var sOutDs = "dsInLogin=dsInLogin";
  var sArg   = "";
  var sfunc  = "fn_callback_session_chk";
  
  this.transaction(sId,sUrl,sInDs,sOutDs,sArg,sfunc);
};

this.Button03_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nW = 1000;
	var nH = 700;

	var objApp = nexacro.getApplication();
	var nLeft = (objApp.mainframe.width  / 2) - Math.round(nW / 2);
	var nTop  = (objApp.mainframe.height / 2) - Math.round(nH / 2) ;        
	nLeft = system.clientToScreenX(this, nLeft);
	nTop  = system.clientToScreenY(this, nTop);

// 	var objParam = {param1:this.edt_param1.value
// 				  , param2:this.edt_param2.value
// 				  , param3:this.ds_parent};
	var objParam = { };
	var sOpenStyle = "dragmovetype=all"
				 + " resizable=true"
				 + " titletext=Modeless"
				 + " showtitlebar=true"
				 + " showstatusbar=false";

	nexacro.open("chf_popup3"
			   , "FrameBase::Form_Work.xfdl"
			   , this.getOwnerFrame()
			   , objParam
			   , sOpenStyle
			   , nLeft
			   , nTop
			   , nW
			   , nH
			   , this);
};


this.Btn_Export_Page_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nW = 1000;
	var nH = 700;

	var objApp = nexacro.getApplication();
	var nLeft = (objApp.mainframe.width  / 2) - Math.round(nW / 2);
	var nTop  = (objApp.mainframe.height / 2) - Math.round(nH / 2) ;        
	nLeft = system.clientToScreenX(this, nLeft);
	nTop  = system.clientToScreenY(this, nTop);

// 	var objParam = {param1:this.edt_param1.value
// 				  , param2:this.edt_param2.value
// 				  , param3:this.ds_parent};
	var objParam = { };
	var sOpenStyle = "dragmovetype=all"
				 + " resizable=true"
				 + " titletext=Modeless"
				 + " showtitlebar=true"
				 + " showstatusbar=false";

	nexacro.open("chf_popup3"
			   , "FrameBase::ExcelExport_curve.xfdl"
			   , this.getOwnerFrame()
			   , objParam
			   , sOpenStyle
			   , nLeft
			   , nTop
			   , nW
			   , nH
			   , this);
};



this.treegrid_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.go("Base::treegrid.xfdl");
};

this.menusearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.go("Base::menusearch.xfdl");
};

this.menusearch_expansion_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	this.go("Base::menusearch_expansion.xfdl");
};
]]></Script>
  </Form>
</FDL>
